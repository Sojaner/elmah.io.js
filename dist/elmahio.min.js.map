{"version":3,"sources":["elmahio.js"],"names":["root","factory","define","amd","exports","module","Elmahio","global","window","this","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","props","concat","obj","Object","i","length","hasOwnProperty","undefined","prototype","getArgs","args","setArgs","v","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","join","getFileName","getLineNumber","getColumnNumber","fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","functionName","split","locationString","parts","exec","fileName","lineNumber","columnNumber","Boolean","j","Number","k","String","ErrorStackParser","parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","urlLike","replace","filter","line","map","tokens","slice","locationParts","pop","source","functionNameRegex","matches","e","message","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","result","len","push","argsRaw","functionCall","shift","StackTraceGPS","SourceMap","_xdr","url","Promise","resolve","reject","req","XMLHttpRequest","open","onerror","onreadystatechange","readyState","status","substr","responseText","send","_atob","b64str","atob","_ensureStackFrameIsLegit","stackframe","opts","sourceCache","sourceMapConsumerCache","ajax","_get","location","isDataUrl","offline","sourceMapStart","encodedSource","xhrPromise","method","then","bind","_getSourceMapConsumer","sourceMappingURL","defaultSourceRoot","sourceMapConsumerPromise","sourceMapSource","string","JSON","_parseJson","sourceRoot","SourceMapConsumer","pinpoint","getMappedLocation","mappedStackFrame","resolveMappedStackFrame","findFunctionName","guessedFunctionName","syntaxes","code","maxLines","Math","min","commentPos","index","m","_findFunctionName","defineProperty","create","_ensureSupportedEnvironment","lastSourceMappingUrl","matchSourceMappingUrl","sourceMappingUrlRegExp","_findSourceMappingURL","test","sourceMapConsumer","loc","originalPositionFor","column","mappedSource","sourceContentFor","name","_extractLocationInfoFromSourceMapSource","scriptFile","document","getElementsByTagName","params","query","Params","Pairs","KeyVal","key","unescape","val","parseQuery","src","paramsLength","size","objectLength","debugSettings","label","labelCSS","successCSS","errorCSS","warningCSS","lightCSS","defaults","apiKey","logId","debug","application","extend","extended","deep","arguments","merge","prop","getSearchParameters","prmstr","search","prmarr","tmparr","value","transformToAssocArray","merge_objects","obj1","obj2","obj3","attrname1","attrname2","Constructor","options","settings","publicAPIs","getPayload","payload","pathname","payload_data","navigator","language","documentMode","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","screen","msOrientation","orientation","mozOrientation","type","width","height","colorDepth","data","payload_serverVariables","userAgent","referrer","protocol","hostname","serverVariables","confirmResponse","response","console","log","Date","toLocaleString","stackGPS","xhr","jsonData","errorStack","gps","stackframes","all","sf","resolveOriginal","newFrames","forEach","stackFrame","fn","stackString","unshift","detail","stringify","sendManualPayload","callback","logType","messageLog","errorLog","api_key","log_id","queryParams","setRequestHeader","onload","statusText","emit","title","severity","queryString","msg","verbose","information","warning","fatal","on","ctx","evtArr","apply","init","lineno","colno","sendPayload"],"mappings":"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","sourcesContent":["/*!\n * elmah.io Javascript Logger - version 3.0.0-beta2\n * (c) 2018 elmah.io, Apache 2.0 License, https://elmah.io\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return factory(root);\n        });\n    } else if (typeof exports === 'object') {\n        module.exports = factory(root);\n    } else {\n        root.Elmahio = factory(root);\n    }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n    'use strict';\n\n    //\n    // ==== STACKFRAME ====\n    //\n\n    var StackFrame = (function () {\n        \"use strict\";\n        function _isNumber(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n        function _capitalize(str) {\n            return str.charAt(0).toUpperCase() + str.substring(1);\n        }\n        function _getter(p) {\n            return function () {\n                return this[p];\n            };\n        }\n        var booleanProps = [\"isConstructor\", \"isEval\", \"isNative\", \"isToplevel\"];\n        var numericProps = [\"columnNumber\", \"lineNumber\"];\n        var stringProps = [\"fileName\", \"functionName\", \"source\"];\n        var arrayProps = [\"args\"];\n        var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n        function StackFrame(obj) {\n            if (obj instanceof Object) {\n                for (var i = 0; i < props.length; i++) {\n                    if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                        this[\"set\" + _capitalize(props[i])](obj[props[i]]);\n                    }\n                }\n            }\n        }\n        StackFrame.prototype = {\n            getArgs: function () {\n                return this.args;\n            },\n            setArgs: function (v) {\n                if (Object.prototype.toString.call(v) !== \"[object Array]\") {\n                    throw new TypeError(\"Args must be an Array\");\n                }\n                this.args = v;\n            },\n            getEvalOrigin: function () {\n                return this.evalOrigin;\n            },\n            setEvalOrigin: function (v) {\n                if (v instanceof StackFrame) {\n                    this.evalOrigin = v;\n                } else if (v instanceof Object) {\n                    this.evalOrigin = new StackFrame(v);\n                } else {\n                    throw new TypeError(\"Eval Origin must be an Object or StackFrame\");\n                }\n            },\n            toString: function () {\n                var functionName = this.getFunctionName() || \"{anonymous}\";\n                var args = \"(\" + (this.getArgs() || []).join(\",\") + \")\";\n                var fileName = this.getFileName() ? \"@\" + this.getFileName() : \"\";\n                var lineNumber = _isNumber(this.getLineNumber()) ? \":\" + this.getLineNumber() : \"\";\n                var columnNumber = _isNumber(this.getColumnNumber()) ? \":\" + this.getColumnNumber() : \"\";\n                return functionName + args + fileName + lineNumber + columnNumber;\n            }\n        };\n        StackFrame.fromString = function StackFrame$$fromString(str) {\n            var argsStartIndex = str.indexOf(\"(\");\n            var argsEndIndex = str.lastIndexOf(\")\");\n            var functionName = str.substring(0, argsStartIndex);\n            var args = str.substring(argsStartIndex + 1, argsEndIndex).split(\",\");\n            var locationString = str.substring(argsEndIndex + 1);\n            if (locationString.indexOf(\"@\") === 0) {\n                var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, \"\");\n                var fileName = parts[1];\n                var lineNumber = parts[2];\n                var columnNumber = parts[3];\n            }\n            return new StackFrame({\n                functionName: functionName,\n                args: args || undefined,\n                fileName: fileName,\n                lineNumber: lineNumber || undefined,\n                columnNumber: columnNumber || undefined\n            });\n        };\n        for (var i = 0; i < booleanProps.length; i++) {\n            StackFrame.prototype[\"get\" + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n            StackFrame.prototype[\"set\" + _capitalize(booleanProps[i])] = function (p) {\n                return function (v) {\n                    this[p] = Boolean(v);\n                };\n            }(booleanProps[i]);\n        }\n        for (var j = 0; j < numericProps.length; j++) {\n            StackFrame.prototype[\"get\" + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n            StackFrame.prototype[\"set\" + _capitalize(numericProps[j])] = function (p) {\n                return function (v) {\n                    if (!_isNumber(v)) {\n                        throw new TypeError(p + \" must be a Number\");\n                    }\n                    this[p] = Number(v);\n                };\n            }(numericProps[j]);\n        }\n        for (var k = 0; k < stringProps.length; k++) {\n            StackFrame.prototype[\"get\" + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n            StackFrame.prototype[\"set\" + _capitalize(stringProps[k])] = function (p) {\n                return function (v) {\n                    this[p] = String(v);\n                };\n            }(stringProps[k]);\n        }\n        return StackFrame;\n    })();\n\n    //\n    // ==== ERROR STACK PARSER ====\n    //\n\n    var ErrorStackParser = (function () {\n        \"use strict\";\n        var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n        var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n        var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n        return {\n            /**\n                 * Given an Error object, extract the most information from it.\n                 *\n                 * @param {Error} error object\n                 * @return {Array} of StackFrames\n                 */\n            parse: function ErrorStackParser$$parse(error) {\n                if (typeof error.stacktrace !== \"undefined\" || typeof error[\"opera#sourceloc\"] !== \"undefined\") {\n                    return this.parseOpera(error);\n                } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                    return this.parseV8OrIE(error);\n                } else if (error.stack) {\n                    return this.parseFFOrSafari(error);\n                } else {\n                    throw new Error(\"Cannot parse given Error object\");\n                }\n            },\n            // Separate line and column numbers from a string of the form: (URI:Line:Column)\n            extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n                // Fail-fast but return locations like \"(native)\"\n                if (urlLike.indexOf(\":\") === -1) {\n                    return [urlLike];\n                }\n                var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n                var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, \"\"));\n                return [parts[1], parts[2] || undefined, parts[3] || undefined];\n            },\n            parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n                var filtered = error.stack.split(\"\\n\").filter(function (line) {\n                    return !!line.match(CHROME_IE_STACK_REGEXP);\n                }, this);\n                return filtered.map(function (line) {\n                    if (line.indexOf(\"(eval \") > -1) {\n                        // Throw away eval information until we implement stacktrace.js/stackframe#8\n                        line = line.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, \"\");\n                    }\n                    var tokens = line.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").split(/\\s+/).slice(1);\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join(\" \") || undefined;\n                    var fileName = [\"eval\", \"<anonymous>\"].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: fileName,\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }, this);\n            },\n            parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n                var filtered = error.stack.split(\"\\n\").filter(function (line) {\n                    return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n                }, this);\n                return filtered.map(function (line) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    if (line.indexOf(\" > eval\") > -1) {\n                        line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, \":$1\");\n                    }\n                    if (line.indexOf(\"@\") === -1 && line.indexOf(\":\") === -1) {\n                        // Safari eval frames only have function names and nothing else\n                        return new StackFrame({\n                            functionName: line\n                        });\n                    } else {\n                        var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                        var matches = line.match(functionNameRegex);\n                        var functionName = matches && matches[1] ? matches[1] : undefined;\n                        var locationParts = this.extractLocation(line.replace(functionNameRegex, \"\"));\n                        return new StackFrame({\n                            functionName: functionName,\n                            fileName: locationParts[0],\n                            lineNumber: locationParts[1],\n                            columnNumber: locationParts[2],\n                            source: line\n                        });\n                    }\n                }, this);\n            },\n            parseOpera: function ErrorStackParser$$parseOpera(e) {\n                if (!e.stacktrace || e.message.indexOf(\"\\n\") > -1 && e.message.split(\"\\n\").length > e.stacktrace.split(\"\\n\").length) {\n                    return this.parseOpera9(e);\n                } else if (!e.stack) {\n                    return this.parseOpera10(e);\n                } else {\n                    return this.parseOpera11(e);\n                }\n            },\n            parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n                var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n                var lines = e.message.split(\"\\n\");\n                var result = [];\n                for (var i = 2, len = lines.length; i < len; i += 2) {\n                    var match = lineRE.exec(lines[i]);\n                    if (match) {\n                        result.push(new StackFrame({\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        }));\n                    }\n                }\n                return result;\n            },\n            parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n                var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n                var lines = e.stacktrace.split(\"\\n\");\n                var result = [];\n                for (var i = 0, len = lines.length; i < len; i += 2) {\n                    var match = lineRE.exec(lines[i]);\n                    if (match) {\n                        result.push(new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        }));\n                    }\n                }\n                return result;\n            },\n            // Opera 10.65+ Error.stack very similar to FF/Safari\n            parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n                var filtered = error.stack.split(\"\\n\").filter(function (line) {\n                    return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n                }, this);\n                return filtered.map(function (line) {\n                    var tokens = line.split(\"@\");\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionCall = tokens.shift() || \"\";\n                    var functionName = functionCall.replace(/<anonymous function(: (\\w+))?>/, \"$2\").replace(/\\([^\\)]*\\)/g, \"\") || undefined;\n                    var argsRaw;\n                    if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                        argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, \"$1\");\n                    }\n                    var args = argsRaw === undefined || argsRaw === \"[arguments not available]\" ? undefined : argsRaw.split(\",\");\n                    return new StackFrame({\n                        functionName: functionName,\n                        args: args,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }, this);\n            }\n        };\n    })();\n\n    //\n    // ==== STACKTRACE-GPS ====\n    //\n\n    var StackTraceGPS = (function (SourceMap, StackFrame) {\n        \"use strict\";\n        /**\n           * Make a X-Domain request to url and callback.\n           *\n           * @param {String} url\n           * @returns {Promise} with response text if fulfilled\n           */\n        function _xdr(url) {\n            return new Promise(function (resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.open(\"get\", url);\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 300 || url.substr(0, 7) === \"file://\" && req.responseText) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error(\"HTTP status: \" + req.status + \" retrieving \" + url));\n                        }\n                    }\n                };\n                req.send();\n            });\n        }\n        /**\n           * Convert a Base64-encoded string into its original representation.\n           * Used for inline sourcemaps.\n           *\n           * @param {String} b64str Base-64 encoded string\n           * @returns {String} original representation of the base64-encoded string.\n           */\n        function _atob(b64str) {\n            if (typeof window !== \"undefined\" && window.atob) {\n                return window.atob(b64str);\n            } else {\n                throw new Error(\"You must supply a polyfill for window.atob in this environment\");\n            }\n        }\n        function _parseJson(string) {\n            if (typeof JSON !== \"undefined\" && JSON.parse) {\n                return JSON.parse(string);\n            } else {\n                throw new Error(\"You must supply a polyfill for JSON.parse in this environment\");\n            }\n        }\n        function _findFunctionName(source, lineNumber) {\n            var syntaxes = [ // {name} = function ({args}) TODO args capture\n                /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/, // function {name}({args}) m[1]=name m[2]=args\n                /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/, // {name} = eval()\n                /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/, // fn_name() {\n                /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/, // {name} = () => {\n                /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/];\n            var lines = source.split(\"\\n\");\n            // Walk backwards in the source lines until we find the line which matches one of the patterns above\n            var code = \"\";\n            var maxLines = Math.min(lineNumber, 20);\n            for (var i = 0; i < maxLines; ++i) {\n                // lineNo is 1-based, source[] is 0-based\n                var line = lines[lineNumber - i - 1];\n                var commentPos = line.indexOf(\"//\");\n                if (commentPos >= 0) {\n                    line = line.substr(0, commentPos);\n                }\n                if (line) {\n                    code = line + code;\n                    var len = syntaxes.length;\n                    for (var index = 0; index < len; index++) {\n                        var m = syntaxes[index].exec(code);\n                        if (m && m[1]) {\n                            return m[1];\n                        }\n                    }\n                }\n            }\n            return undefined;\n        }\n        function _ensureSupportedEnvironment() {\n            if (typeof Object.defineProperty !== \"function\" || typeof Object.create !== \"function\") {\n                throw new Error(\"Unable to consume source maps in older browsers\");\n            }\n        }\n        function _ensureStackFrameIsLegit(stackframe) {\n            if (typeof stackframe !== \"object\") {\n                throw new TypeError(\"Given StackFrame is not an object\");\n            } else if (typeof stackframe.fileName !== \"string\") {\n                throw new TypeError(\"Given file name is not a String\");\n            } else if (typeof stackframe.lineNumber !== \"number\" || stackframe.lineNumber % 1 !== 0 || stackframe.lineNumber < 1) {\n                throw new TypeError(\"Given line number must be a positive integer\");\n            } else if (typeof stackframe.columnNumber !== \"number\" || stackframe.columnNumber % 1 !== 0 || stackframe.columnNumber < 0) {\n                throw new TypeError(\"Given column number must be a non-negative integer\");\n            }\n            return true;\n        }\n        function _findSourceMappingURL(source) {\n            var sourceMappingUrlRegExp = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/gm;\n            var lastSourceMappingUrl;\n            var matchSourceMappingUrl;\n            while (matchSourceMappingUrl = sourceMappingUrlRegExp.exec(source)) {\n                // jshint ignore:line\n                lastSourceMappingUrl = matchSourceMappingUrl[1];\n            }\n            if (lastSourceMappingUrl) {\n                return lastSourceMappingUrl;\n            } else {\n                throw new Error(\"sourceMappingURL not found\");\n            }\n        }\n        function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\n            return new Promise(function (resolve, reject) {\n                var loc = sourceMapConsumer.originalPositionFor({\n                    line: stackframe.lineNumber,\n                    column: stackframe.columnNumber\n                });\n                if (loc.source) {\n                    // cache mapped sources\n                    var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\n                    if (mappedSource) {\n                        sourceCache[loc.source] = mappedSource;\n                    }\n                    resolve(// given stackframe and source location, update stackframe\n                        new StackFrame({\n                            functionName: loc.name || stackframe.functionName,\n                            args: stackframe.args,\n                            fileName: loc.source,\n                            lineNumber: loc.line,\n                            columnNumber: loc.column\n                        }));\n                } else {\n                    reject(new Error(\"Could not get original source for given stackframe and source map\"));\n                }\n            });\n        }\n        /**\n           * @constructor\n           * @param {Object} opts\n           *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n           *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\n           *      opts.offline = True to prevent network requests.\n           *              Best effort without sources or source maps.\n           *      opts.ajax = Promise returning function to make X-Domain requests\n           */\n        return function StackTraceGPS(opts) {\n            if (!(this instanceof StackTraceGPS)) {\n                return new StackTraceGPS(opts);\n            }\n            opts = opts || {};\n            this.sourceCache = opts.sourceCache || {};\n            this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\n            this.ajax = opts.ajax || _xdr;\n            this._atob = opts.atob || _atob;\n            this._get = function _get(location) {\n                return new Promise(function (resolve, reject) {\n                    var isDataUrl = location.substr(0, 5) === \"data:\";\n                    if (this.sourceCache[location]) {\n                        resolve(this.sourceCache[location]);\n                    } else if (opts.offline && !isDataUrl) {\n                        reject(new Error(\"Cannot make network requests in offline mode\"));\n                    } else {\n                        if (isDataUrl) {\n                            // data URLs can have parameters.\n                            // see http://tools.ietf.org/html/rfc2397\n                            var supportedEncodingRegexp = /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                            var match = location.match(supportedEncodingRegexp);\n                            if (match) {\n                                var sourceMapStart = match[0].length;\n                                var encodedSource = location.substr(sourceMapStart);\n                                var source = this._atob(encodedSource);\n                                this.sourceCache[location] = source;\n                                resolve(source);\n                            } else {\n                                reject(new Error(\"The encoding of the inline sourcemap is not supported\"));\n                            }\n                        } else {\n                            var xhrPromise = this.ajax(location, {\n                                method: \"get\"\n                            });\n                            // Cache the Promise to prevent duplicate in-flight requests\n                            this.sourceCache[location] = xhrPromise;\n                            xhrPromise.then(resolve, reject);\n                        }\n                    }\n                }.bind(this));\n            };\n            /**\n                 * Creating SourceMapConsumers is expensive, so this wraps the creation of a\n                 * SourceMapConsumer in a per-instance cache.\n                 *\n                 * @param {String} sourceMappingURL = URL to fetch source map from\n                 * @param {String} defaultSourceRoot = Default source root for source map if undefined\n                 * @returns {Promise} that resolves a SourceMapConsumer\n                 */\n            this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\n                return new Promise(function (resolve, reject) {\n                    if (this.sourceMapConsumerCache[sourceMappingURL]) {\n                        resolve(this.sourceMapConsumerCache[sourceMappingURL]);\n                    } else {\n                        var sourceMapConsumerPromise = new Promise(function (resolve, reject) {\n                            return this._get(sourceMappingURL).then(function (sourceMapSource) {\n                                if (typeof sourceMapSource === \"string\") {\n                                    sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, \"\"));\n                                }\n                                if (typeof sourceMapSource.sourceRoot === \"undefined\") {\n                                    sourceMapSource.sourceRoot = defaultSourceRoot;\n                                }\n                                resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\n                            }, reject);\n                        }.bind(this));\n                        this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\n                        resolve(sourceMapConsumerPromise);\n                    }\n                }.bind(this));\n            };\n            /**\n                 * Given a StackFrame, enhance function name and use source maps for a\n                 * better StackFrame.\n                 *\n                 * @param {StackFrame} stackframe object\n                 * @returns {Promise} that resolves with with source-mapped StackFrame\n                 */\n            this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n                return new Promise(function (resolve, reject) {\n                    this.getMappedLocation(stackframe).then(function (mappedStackFrame) {\n                        function resolveMappedStackFrame() {\n                            resolve(mappedStackFrame);\n                        }\n                        this.findFunctionName(mappedStackFrame).then(resolve, resolveMappedStackFrame)[\"catch\"](resolveMappedStackFrame);\n                    }.bind(this), reject);\n                }.bind(this));\n            };\n            /**\n                 * Given a StackFrame, guess function name from location information.\n                 *\n                 * @param {StackFrame} stackframe\n                 * @returns {Promise} that resolves with enhanced StackFrame.\n                 */\n            this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n                return new Promise(function (resolve, reject) {\n                    _ensureStackFrameIsLegit(stackframe);\n                    this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                        var lineNumber = stackframe.lineNumber;\n                        var columnNumber = stackframe.columnNumber;\n                        var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                        // Only replace functionName if we found something\n                        if (guessedFunctionName) {\n                            resolve(new StackFrame({\n                                functionName: guessedFunctionName,\n                                args: stackframe.args,\n                                fileName: stackframe.fileName,\n                                lineNumber: lineNumber,\n                                columnNumber: columnNumber\n                            }));\n                        } else {\n                            resolve(stackframe);\n                        }\n                    }, reject)[\"catch\"](reject);\n                }.bind(this));\n            };\n            /**\n                 * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n                 *\n                 * @param {StackFrame} stackframe\n                 * @returns {Promise} that resolves with enhanced StackFrame.\n                 */\n            this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n                return new Promise(function (resolve, reject) {\n                    _ensureSupportedEnvironment();\n                    _ensureStackFrameIsLegit(stackframe);\n                    var sourceCache = this.sourceCache;\n                    var fileName = stackframe.fileName;\n                    this._get(fileName).then(function (source) {\n                        var sourceMappingURL = _findSourceMappingURL(source);\n                        var isDataUrl = sourceMappingURL.substr(0, 5) === \"data:\";\n                        var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf(\"/\") + 1);\n                        if (sourceMappingURL[0] !== \"/\" && !isDataUrl && !/^https?:\\/\\/|^\\/\\//i.test(sourceMappingURL)) {\n                            sourceMappingURL = defaultSourceRoot + sourceMappingURL;\n                        }\n                        return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot).then(function (sourceMapConsumer) {\n                            return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache).then(resolve)[\"catch\"](function () {\n                                resolve(stackframe);\n                            });\n                        });\n                    }.bind(this), reject)[\"catch\"](reject);\n                }.bind(this));\n            };\n        };\n    })();\n\n    //\n    // Shared Variables\n    //\n\n    var scriptFile = document.getElementsByTagName('script');\n    var scriptIndex = scriptFile.length - 1;\n    var myScript = scriptFile[scriptIndex];\n    var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\n    var params = parseQuery(queryString);\n    var paramsLength = objectLength(params);\n\n    var debugSettings = {\n        label: ' elmah.io debugger : On ',\n        labelCSS: 'background: #06a89c; color: #ffffff; display: inline-block; font-size: 14px;',\n        successCSS: 'background: #d4edda; color: #155724; display: inline-block; font-size: 13px;',\n        errorCSS: 'background: #f8d7da; color: #721c24; display: inline-block; font-size: 13px;',\n        warningCSS: 'background: #fff3cd; color: #856404; display: inline-block; font-size: 13px;',\n        lightCSS: 'background: #e2e3e5; color: #383d41; display: inline-block; font-size: 13px;'\n    };\n\n    var defaults = {\n        apiKey: null,\n        logId: null,\n        debug: false,\n        application: null,\n        filter: null\n    };\n\n    //\n    // Shared Methods\n    //\n\n    var extend = function () {\n\n        // Variables\n        var extended = {};\n        var deep = false;\n        var i = 0;\n\n        // Check if a deep merge\n        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n            deep = arguments[0];\n            i++;\n        }\n\n        // Merge the object into the extended object\n        var merge = function (obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    // If property is an object, merge properties\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n                        extended[prop] = extend(extended[prop], obj[prop]);\n                    } else {\n                        extended[prop] = obj[prop];\n                    }\n                }\n            }\n        };\n\n        // Loop through each object and conduct a merge\n        for (; i < arguments.length; i++) {\n            var obj = arguments[i];\n            merge(obj);\n        }\n\n        return extended;\n\n    };\n\n    //\n    // Helpers\n    //\n\n    function parseQuery(query) {\n        var Params = new Object();\n        if (!query) return Params; // return empty object\n        var Pairs = query.split(/[;&]/);\n        for (var i = 0; i < Pairs.length; i++) {\n            var KeyVal = Pairs[i].split('=');\n            if (!KeyVal || KeyVal.length !== 2) continue;\n            var key = unescape(KeyVal[0]);\n            var val = unescape(KeyVal[1]);\n            val = val.replace(/\\+/g, ' ');\n            Params[key] = val;\n        }\n        return Params;\n    }\n\n    function objectLength(obj) {\n        var size = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) size++;\n        }\n        return size;\n    };\n\n    function getSearchParameters() {\n        var prmstr = window.location.search.substr(1);\n        return prmstr !== null && prmstr !== \"\" ? transformToAssocArray(prmstr) : {};\n    }\n\n    function transformToAssocArray(prmstr) {\n        var params = [];\n        var prmarr = prmstr.split(\"&\");\n        for (var i = 0; i < prmarr.length; i++) {\n            var tmparr = prmarr[i].split(\"=\");\n            params.push({\n                'key': tmparr[0],\n                'value': tmparr[1]\n            });\n        }\n        return params;\n    }\n\n    function merge_objects(obj1, obj2) {\n        var obj3 = {};\n        for (var attrname1 in obj1) {\n            obj3[attrname1] = obj1[attrname1];\n        }\n        for (var attrname2 in obj2) {\n            obj3[attrname2] = obj2[attrname2];\n        }\n\n        return obj3;\n    }\n\n    //\n    // Constructor\n    // Can be named anything you want\n    //\n\n    var Constructor = function (options) {\n\n        //\n        // Unique Variables\n        //\n\n        var publicAPIs = {};\n        var settings;\n\n        function getPayload() {\n            var payload = {\n                \"url\": document.location.pathname || '/',\n                \"application\": settings.application\n            };\n\n            var payload_data = [];\n\n            if (navigator.language) payload_data.push({ \"key\": \"User-Language\", \"value\": navigator.language });\n            if (document.documentMode) payload_data.push({ \"key\": \"Document-Mode\", \"value\": document.documentMode });\n            if (window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth) payload_data.push({ \"key\": \"Browser-Width\", \"value\": window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth });\n            if (window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight) payload_data.push({ \"key\": \"Browser-Height\", \"value\": window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight });\n            if ((screen.msOrientation || (screen.orientation || screen.mozOrientation || {}).type) !== undefined) payload_data.push({ \"key\": \"Screen-Orientation\", \"value\": ((screen.msOrientation || (screen.orientation || screen.mozOrientation || {}).type).split(\"-\"))[0] });\n            if (screen.width) payload_data.push({ \"key\": \"Screen-Width\", \"value\": screen.width });\n            if (screen.height) payload_data.push({ \"key\": \"Screen-Height\", \"value\": screen.height });\n            if (screen.colorDepth) payload_data.push({ \"key\": \"Color-Depth\", \"value\": screen.colorDepth });\n            payload_data.push({ \"key\": \"X-ELMAHIO-SEARCH-isClientside\", \"value\": \"true\" });\n\n            payload.data = payload_data;\n\n            var payload_serverVariables = [];\n            if (navigator.userAgent) payload_serverVariables.push({ \"key\": \"User-Agent\", \"value\": navigator.userAgent });\n            if (document.referrer) payload_serverVariables.push({ \"key\": \"Referer\", \"value\": document.referrer });\n            if (document.location.protocol === \"https:\") payload_serverVariables.push({ \"key\": \"HTTPS\", \"value\": 'on' });\n            if (document.location.hostname) payload_serverVariables.push({ \"key\": \"Host\", \"value\": document.location.hostname });\n\n            payload.serverVariables = payload_serverVariables;\n\n            return payload;\n        }\n\n        function confirmResponse(status, response) {\n            if (settings.debug) {\n                if (status === 'error') {\n                    console.log('%c \\u2BC8 Error log: ' + '%c \\u2715 Not created ', debugSettings.lightCSS, debugSettings.errorCSS);\n                } else if (status === 'success') {\n                    console.log('%c \\u2BC8 Error log: ' + '%c \\u2714 ' + response + ' at ' + new Date().toLocaleString() + ' ', debugSettings.lightCSS, debugSettings.successCSS);\n                } else {\n                    console.log('%c \\u2BC8 Error log: ' + '%c \\u2715 Not created. Title should not be undefined, null or empty ! ', debugSettings.lightCSS, debugSettings.errorCSS);\n                }\n            }\n        }\n\n        function stackGPS(error, xhr, jsonData) {\n        \tvar errorStack = error.toString().split(\"\\n\")[0];\n        \tvar gps = new StackTraceGPS();\n            var promise = new Promise(function(resolve) {\n\t            var stackframes = ErrorStackParser.parse(error);\n\t            resolve(Promise.all(stackframes.map(function(sf) {\n\t                return new Promise(function(resolve) {\n\t                    function resolveOriginal() {\n\t                        resolve(sf);\n\t                    }\n\t                    gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n\t                });\n\t            })));\n            \t},\n            \tfunction(reject) {\n            \t\tconsole.log('pula');\n            \t}\n            );\n\n            promise.then(function(newFrames){\n            \tnewFrames.forEach(function(stackFrame, i){\n\t\t\tif(stackFrame.functionName) {\n            \t\t\tvar fn = stackFrame.functionName + ' ';\n            \t\t} else {\n            \t\t\tvar fn = '';\n            \t\t}\n            \t\tvar stackString = '    at ' + fn + '(' + stackFrame.fileName + ':' + stackFrame.lineNumber + ':' + stackFrame.columnNumber + ')';\n            \t\tnewFrames[i] = stackString;\n            \t});\n            \tnewFrames.unshift(errorStack);\n            \tjsonData.detail = newFrames.join(\"\\n\");\n            \txhr.send(JSON.stringify(jsonData));\n            });\n\n        }\n\n        // Private methods\n\n        var sendPayload = function (apiKey, logId, callback, errorLog) {\n            var api_key = apiKey,\n                log_id = logId,\n                error = errorLog,\n                send = 1,\n                queryParams = getSearchParameters(),\n                stack = error.error ? ErrorStackParser.parse(error.error) : '';\n\n            if ((api_key !== null && log_id !== null) || (paramsLength === 2)) {\n\n                // Priority for parameters\n                if (params.hasOwnProperty('apiKey') && params.hasOwnProperty('logId')) {\n                    api_key = params['apiKey'];\n                    log_id = params['logId'];\n                }\n\n                // get new XHR object\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", \"https://api.elmah.io/v3/messages/\" + log_id + \"?api_key=\" + api_key, true);\n\n                xhr.setRequestHeader('Content-type', 'application/json');\n\n                xhr.onload = function (e) {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 201) {\n                            callback('success', xhr.statusText);\n                        }\n                    }\n                };\n\n                xhr.onerror = function (e) {\n                    callback('error', xhr.statusText);\n\n                    // on error event\n                    publicAPIs.emit('error', xhr.status, xhr.statusText);\n                }\n\n                var jsonData = {\n                    \"detail\": error.error ? error.error.stack : null,\n                    \"title\": error.message || 'Unspecified error',\n                    \"source\": stack && stack.length > 0 ? stack[0].fileName : null,\n                    \"severity\": \"Error\",\n                    \"type\": error.error ? error.error.name : null,\n                    \"queryString\": JSON.parse(JSON.stringify(queryParams))\n                };\n\n                // Add payload to jsonData\n                jsonData = merge_objects(jsonData, getPayload());\n\n                // filter callback\n                if (settings.filter !== null) {\n                    if (settings.filter(jsonData)) {\n                        send = 0;\n                    }\n                }\n\n                if (send === 1) {\n                    // on message event\n                    publicAPIs.emit('message', jsonData);\n\n                    if (error.error && typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"[native code]\") !== -1) {\n                    \t// send message trying to pinpoint stackframes\n                    \tstackGPS(error.error, xhr, jsonData);\n\t                } else {\n\t                \t// send message\n                    \txhr.send(JSON.stringify(jsonData));\n\t                }\n                }\n\n            } else {\n                return console.log('Login api error');\n            }\n        };\n\n        var sendManualPayload = function (apiKey, logId, callback, logType, messageLog, errorLog) {\n            var api_key = apiKey,\n                log_id = logId,\n                type = logType,\n                error = errorLog,\n                message = messageLog,\n                send = 1,\n                queryParams = getSearchParameters();\n\n            if ((api_key !== null && log_id !== null) || (paramsLength === 2)) {\n\n                // Priority for parameters\n                if (params.hasOwnProperty('apiKey') && params.hasOwnProperty('logId')) {\n                    api_key = params['apiKey'];\n                    log_id = params['logId'];\n                }\n\n                // get new XHR object\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", \"https://api.elmah.io/v3/messages/\" + log_id + \"?api_key=\" + api_key, true);\n                xhr.setRequestHeader('Content-type', 'application/json');\n\n                xhr.onload = function (e) {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 201) {\n                            callback('success', xhr.statusText);\n                        }\n                    }\n                };\n\n                xhr.onerror = function (e) {\n                    callback('error', xhr.statusText);\n\n                    // on error event\n                    publicAPIs.emit('error', xhr.status, xhr.statusText);\n                }\n\n                if (type !== \"Log\") {\n\n                    var stack = error ? ErrorStackParser.parse(error) : null;\n\n                    var jsonData = {\n                        \"title\": message,\n                        \"source\": stack && stack.length > 0 ? stack[0].fileName : null,\n                        \"detail\": error ? error.stack : null,\n                        \"severity\": type,\n                        \"type\": error ? error.name : null,\n                        \"queryString\": JSON.parse(JSON.stringify(queryParams))\n                    };\n\n                    // Add payload to jsonData\n                    jsonData = merge_objects(jsonData, getPayload());\n\n                } else {\n\n                    jsonData = error;\n\n                }\n\n                // filter callback\n                if (settings.filter !== null) {\n                    if (settings.filter(jsonData)) {\n                        send = 0;\n                    }\n                }\n\n                if (send === 1) {\n                    if (jsonData.title) {\n\n                        // on message event\n                        publicAPIs.emit('message', jsonData);\n\n                        if (error && type !== \"Log\" && typeof Promise !== \"undefined\" && Promise.toString().indexOf(\"[native code]\") !== -1) {\n\t    \t\t\t\t\t// send message trying to pinpoint stackframes\n                    \t\tstackGPS(error, xhr, jsonData);\n\t\t                } else {\n\t\t                \t// send message\n\t                    \txhr.send(JSON.stringify(jsonData));\n\t\t                }\n\n                    } else {\n                        callback('missing-title', xhr.statusText);\n                    }\n                }\n\n            } else {\n                return console.log('Login api error');\n            }\n        };\n\n        // Some public methods\n\n        publicAPIs.error = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Error', msg);\n        };\n        publicAPIs.error = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Error', msg, error);\n        };\n\n        publicAPIs.verbose = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Verbose', msg);\n        };\n        publicAPIs.verbose = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Verbose', msg, error);\n        };\n\n        publicAPIs.debug = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Debug', msg);\n        };\n        publicAPIs.debug = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Debug', msg, error);\n        };\n\n        publicAPIs.information = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Information', msg);\n        };\n        publicAPIs.information = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Information', msg, error);\n        };\n\n        publicAPIs.warning = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Warning', msg);\n        };\n        publicAPIs.warning = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Warning', msg, error);\n        };\n\n        publicAPIs.fatal = function (msg) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Fatal', msg);\n        };\n        publicAPIs.fatal = function (msg, error) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Fatal', msg, error);\n        };\n\n        publicAPIs.log = function (obj) {\n            sendManualPayload(settings.apiKey, settings.logId, confirmResponse, 'Log', null, obj);\n        };\n\n        publicAPIs.on = function (name, callback, ctx) {\n            var e = this.e || (this.e = {});\n\n            (e[name] || (e[name] = [])).push({\n                fn: callback,\n                ctx: ctx\n            });\n\n            return this;\n        };\n\n        publicAPIs.emit = function (name) {\n            var data = [].slice.call(arguments, 1);\n            var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n            var i = 0;\n            var len = evtArr.length;\n\n            for (i; i < len; i++) {\n                evtArr[i].fn.apply(evtArr[i].ctx, data);\n            }\n\n            return this;\n        };\n\n        publicAPIs.init = function (options) {\n\n            // Merge options into defaults\n            settings = extend(defaults, options || {});\n\n            // Code goes here...\n            window.onerror = function (message, source, lineno, colno, error) {\n\n                var errorLog = {\n                    'message': message,\n                    'source': source,\n                    'lineno': lineno,\n                    'colno': colno,\n                    'error': error\n                }\n\n                sendPayload(settings.apiKey, settings.logId, confirmResponse, errorLog);\n\n                return false;\n            }\n\n        };\n\n        // Initialize the plugin\n        publicAPIs.init(options);\n\n        if (settings.debug) {\n            console.log('%c' + debugSettings.label, debugSettings.labelCSS);\n        }\n\n        // Return the public APIs\n        return publicAPIs;\n\n    };\n\n\n    //\n    // Return the constructor\n    //\n\n    if (paramsLength && params.hasOwnProperty('apiKey') && params.hasOwnProperty('logId')) {\n        // Immediately-Invoked Function Expression (IIFE)\n        return new Constructor;\n    } else {\n        // UMD Constructor\n        return Constructor;\n    }\n\n});\n"],"file":"elmahio.min.js"}